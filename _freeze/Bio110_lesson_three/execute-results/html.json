{
  "hash": "da69e1d96e2a550bc5408e2ba2ad6c29",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\neditor: visual\nfilters: \n  - webr\n  - naquiz\ntitle: \"Lesson 3: Variability\"\n---\n\n\n\n\n```{webr-r}\n#| context: setup\nlibrary(tidyverse)\nurl<- \"https://lewis-and-clark-data-science.github.io/BIO-110-Web-Tutorials/physiology_data.csv\"\ndownload.file(url, \"physiology_data.csv\")\n#Pulls data that has been loaded into the Bio 110 github repo. \n# Note: must include physiology_data.csv under resources in the quarto.yml file. Then render and commit to github. then can use the main website url and add \"physiology_data.csv\" at the end after the slash \n\ndata<- read.csv(\"physiology_data.csv\")\n\n\n\n```\n\n## Introduction\n\nWelcome! In this lesson you will learn about measures of variability. You'll learn how to find the standard deviation, variance, standard error, and confidence intervals. You'll also practice subsetting data with the `group_by()` and `filter()` functions.\n\nSee [the home page](index.qmd){target=\"_blank\"} for more details on how to use this tutorial and for troubleshooting tips!\n\n## Variation Around a Central Tendency\n\nYou have already learned that one important way to summarize a set of data values is with a measure of central tendency, the mean or the median.\n\nAnother important summary statistic is the amount of variation around that central tendency.\n\n### Dataset\n\nThis lesson contains a dataset that you will work with, named `data`. You have already worked with these data, in lesson one and two.\n\nType the word data to recall what it contains.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n#Type your code here\n\n\n```\n\n## Answer\n\n```{webr-r}\ndata\n```\n:::\n\nThe dataset contains physiological data for a sample of individuals.\n\nYou can determine how many entries are in the dataframe by using the command `nrow(data)`. Try that now.\n\n::: panel-tabset\n## Code editor\n\n\n\n\n::: {.cell}\n\n```{.webr .cell-code}\n# Type your code here \n\n```\n:::\n\n\n\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(data)\n```\n:::\n\n\n\n:::\n\n::: question\n**How many different individuals are in the sample?**\n\n::: choices\n::: choice\n9\n:::\n\n::: {.choice .correct-choice}\n14\n:::\n\n::: choice\n18\n:::\n:::\n:::\n\n### Variance\n\nOne common measure of variability is the variance. The variance is the square of the average difference between each data value and the mean.\n\nYou can compute the variance of a variable with the `var()` function.\n\nUse `var()` to compute the variance of the `RQ` for the two conditions exercise (1) and resting (2), found in the `Condition` column.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n#Type your code here\n\n\n```\n\n## Hint\n\nUse `group_by()` and `summarize()`, and string the functions together with the pipe (`|>`).\n\nDon't forget to add `na.rm=TRUE` in the `var()` function.\n\n## Hint\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(_____) |> \n  summarize(varianceRQ = var(______, na.rm=TRUE))\n```\n:::\n\n\n\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(Condition) |> \n  summarize(varianceRQ = var(RQ, na.rm=TRUE))\n```\n:::\n\n\n\n\n## Check your work\n\n::: question\n**What is the variance of the respiratory quotient for the resting group (condition 2)?**\n\n::: choices\n::: choice\n1.80123\n:::\n\n::: {.choice .correct-choice}\n0.00176\n:::\n\n::: choice\n0.001995\n:::\n:::\n:::\n:::\n\n### Standard Deviation\n\nAnother common measure of variance is the standard deviation, which is simply the square root of the variance. The function for standard deviation is `sd()`.\n\nCompute the standard deviation of `RQ` for each of the two conditions.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n#Type your code here\n\n\n```\n\n## Hint\n\nUse `group_by()` and `summarize()`, and string the functions together with the pipe (`|>`).\n\nDon't forget to add `na.rm=TRUE` in the `sd()` function.\n\n## Hint\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(_____) |> \n  summarize(stdDevRQ = sd(______, na.rm=TRUE))\n```\n:::\n\n\n\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(Condition) |> \n  summarize(stdDevRQ = sd(RQ, na.rm=TRUE))\n```\n:::\n\n\n\n\n## Check your work\n\n::: question\n**What is the variance of the respiratory quotient for the exercise group (condition 1)**\n\n::: choices\n::: choice\n0.0419\n:::\n\n::: {.choice .correct-choice}\n0.0447\n:::\n\n::: choice\n0.0223\n:::\n:::\n:::\n:::\n\n## Standard error and confidence intervals\n\nOne reason to compute the variability in a data set is to get an idea of how accurately our sample has estimated the mean of a population. Two additional measures of variability, **standard error** and **confidence intervals**, do this more usefully than variance or standard deviation.\n\nThis is because both standard error and confidence intervals become smaller as the sample size (or number of data values) gets larger -- which reflects our increased certainty that our sample mean represents the true population mean.\n\n### Standard Error\n\nTo compute the standard error of a set of data in R, a package called `plotrix` is required. In this tutorial, `plotrix` has already been installed for you.\n\nThe function for computing the standard error is `std.error()`.\n\nCompute the standard error of RQ for each of the two conditions.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n#Type your code here\n\n\n```\n\n## Hint\n\nUse the same syntax as you did for computing standard deviation and variance, just with a new formula. Don't forget to use the pipe to string your functions together!\n\n## Hint\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |>\n  group_by(______) |>\n  summarize(______ = std.error(_____, na.rm=TRUE))\n```\n:::\n\n\n\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |>\n  group_by(Condition) |>\n  summarize(stdErrorRQ = std.error(RQ, na.rm=TRUE))\n```\n:::\n\n\n\n\n## Alternate tidyverse answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |>\n  group_by(Condition) |>\n  summarize(stdErrorRQ = sd(RQ, na.rm=TRUE)/sqrt(n()))\n```\n:::\n\n\n\n\n## Check your work\n\n::: question\n**What is the standard error of RQ for the exercise condition?**\n\n::: choices\n::: {.choice .correct-choice}\n0.0169\n:::\n\n::: choice\n0.1238\n:::\n\n::: choice\n0.0447\n:::\n:::\n:::\n:::\n\n### Confidence Intervals\n\nConfidence intervals are closely related to standard error. The 95% confidence interval is a range of data values that enclose the sample mean. There is a 95% probability that the \"true\" mean lies within the 95% confidence interval of the sample mean.\n\nThe easiest way to compute a 95% confidence interval is to use the `t.test()` function.\n\nThe command for the t-test is `t.test(data$variableName)`\n\nLet's compute the 95% confidence interval of the variable `heart_rate`.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n#Your code here\n\n\n```\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(data$heart_rate)\n```\n:::\n\n\n\n:::\n\nIn the output, you should see the name of your variable, followed by two lines of information that are not relevant if you are only interested in knowing the 95% confidence interval. The 95% confidence interval is on the following line, followed by a computation of the sample mean.\n\nThe 95% confidence interval for the heart rate variable is between 61.08295 and 75.91705. We read this as: There is a 95% probability that the \"true\" mean lies between 61.08 and 75.92.\n\n### Subsetting Data with the `Filter()` Function\n\nWhat if we wanted to find a 95% confidence interval for each condition (exercise and resting)?\n\nWe will use the `filter()` function to extract data with a specific condition.\n\nThe syntax is: `filter(data, columnName == \"some value\")`\n\n-   [Arguments](Bio110_lesson_two.qmd#sec-arguments){target=\"_blank\"} used:\n    -   `data`: Input your original data set\n\n    -   `columnName == \"some value\"` Choose a column you'd like to filter (`columnName`) and then replace `some value` with whatever condition you would like to specify.\n\n    -   You can also replace the `==` with other operators including:\n\n        -   `>` (greater than)\n        -   `<` (less than)\n        -   `<=` (less than or equal to)\n        -   `>=` (greater than or equal to)\n        -   `==` (equal to)\n        -   `!=` (not equal to)\n\nLet's see how this works with an example:\n\n```{webr-r}\n#| read-only:true\nfilter(data, Condition == \"1\")\n```\n\nIf you run this example, you should see `data`, but it will only show rows where the condition is \"1\".\n\nNow, let's save this data as a new variable. Recall you can use `<-` to [assign data](Bio110_lesson_one.qmd#sec-assign-variable){target=\"_blank\"} to a new variable. Try creating a new variable that includes all the rows for which the `Condition` is equal to \"1\". Call your new variable `exerciseData`.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n# Your code here\n\n\n```\n\n## Hint\n\nUse the same code in the example: `filter(data, Condition == \"1\")` but assign it to a new variable name `exerciseData`.\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexerciseData <- filter(data, Condition == \"1\")\n```\n:::\n\n\n\n:::\n\nNow that you've created your variable, type `exerciseData` to see if it worked!\n\n```{webr-r}\n# Your code here\n\n\n```\n\nFinally, let's find the 95% confidence interval for the RQ values measured under Condition 1.\n\nPerform a t.test on your new dataset `exerciseData`, on the RQ column.\n\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n# Your code here\n\n\n```\n\n## Hint\n\nTry something like `t.test(______$______)`\n\n## Answer\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(exerciseData$RQ)\n```\n:::\n\n\n\n:::\n\nSo for these data, the (rounded) sample mean is 0.876, and the 95% confidence interval ranges from a minimum value of 0.834 to a maximum of 0.917.\n\n### Congratulations!\n\nYou've completed lesson three, in which you learned how to compute several measures of **variability**: variance, standard deviation, standard error, and confidence intervals. You also learned ways to **subset a data set** using `group_by()` and `filter()`.\n\nIn lesson four you will learn how to make plots. You'll start with a box plot and histogram, which are a basic ways of graphically displaying the central tendency and the variability of any data set.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}