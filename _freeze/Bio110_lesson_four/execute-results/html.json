{
  "hash": "6389ca2bfc84a6864dd52f7408526c1b",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\neditor: visual\nfilters: \n  - webr\n  - naquiz\ntitle: \"Lesson 4: Introduction to Plots\"\n---\n\n\n\n```{webr-r}\n#| context: setup\nlibrary(tidyverse)\n\nurl<- \"https://lewis-and-clark-data-science.github.io/BIO-110-Web-Tutorials/physiology_data.csv\"\ndownload.file(url, \"physiology_data.csv\")\n#Pulls data that has been loaded into the Bio 110 github repo. \n# Note: must include physiology_data.csv under resources in the quarto.yml file. Then render and commit to github. then can use the main website url and add \"physiology_data.csv\" at the end after the slash \n\n\ndata<- read.csv(\"physiology_data.csv\")\n\n```\n\n## Introduction\n\nWelcome to lesson four, where you will learn the basics of graphing using a package called `ggplot2`. GGPlot is an excellent resource for creating many types of graphs, including histograms, box plots, scatterplots and more. We'll start by introducing how ggplot works and then try creating a histogram.\n\nSee [the home page](index.qmd){target=\"_blank\"} for more details on how to use this tutorial and for troubleshooting tips!\n\n### Dataset\n\nWe will work with the physiology dataset, called `data`, that you have already seen.\n\nType the word data to recall what it contains.\n\n```{webr-r}\n#Type your code here\n\n\n```\n\nWhen you examine the data table, you can see that there are some rows that are missing data for heart rate. In R, missing data are indicated by the letters 'NA'. R will ignore these missing values when making a graph. Once you collect your own data, this is the way to enter any missing data into your data table.\n\n## GGPlot graphing\n\nThere are 3 main components of ggplot:\n\n-   Data (`data`): This is your dataset\n\n-   Aesthetics (`mapping=aes()`): This allows you to define your variables and define how you want your graph to look (color, size, shape, etc)\n\n-   Geometric Objects (`geom_ ______`): Define the type of plot (bar plot, scatter plot, histogram, etc)\n\nThe basic structure of `ggplot()` is as follows. You'll notice that each of the three components above are included in this structure. Also notice that different lines (or properties) are connected using a `+`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes()) +\n  geom_object()\n```\n:::\n\n\n\n### Example: Histogram\n\nLet's look at an example to see how this works. We'll start by creating a histogram. A **histogram** shows the distribution of data values.\n\nTry running the code below.\n\n```{webr-r}\n#| read-only: true\nggplot(data, mapping=aes(x=heart_rate))+\n  geom_histogram(bins=5)\n```\n\nThis will create a histogram of the heart rate values. On the x-axis are intervals (bins) representing the different possible data values. On the y-axis are the frequencies with which different data values are present in the data set (once, twice, etc.).\n\nNotice how the code is set up:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(x=heart_rate)) +\n  geom_histogram(bins=5)\n```\n:::\n\n\n\n-   `ggplot(data ...)`: Specify the `data` right after the first parenthesis\n\n-   `aes(x = heart_rate)`: Specify the x variable (independent variable) and y variable (dependent variable) in the `aes()` argument. A histogram only requires an independent variable, so we did not specify the y variable.\n\n-   `geom_histogram(bins=5)`: Specify histogram as your chosen `geom`. You can also decide how many bins you'd like with the `bins=5` argument. Try changing the 5 to a different number and running the code again, see what happens!\n\n-   Chain together the function `ggplot()` with the geom `geom_histogram()` using a `+`.\n\n#### Try it out\n\nYour turn to give it a try! Make a histogram of the `RQ` values for our `data`.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n# Your code here\n\n\n```\n\n## Hint\n\nHere's the basic structure. Click the next hint for more detailed structure.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(___________))+\n      geom_histogram(______________)\n```\n:::\n\n\n\n## Hint\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(x=______))+\n      geom_histogram(bins=_____)\n```\n:::\n\n\n\n## Hint\n\nMake sure you use the proper capitalization and spelling for the x variable, exactly as it is shown in our `data`.\n\n## Answer\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(x=RQ))+\n      geom_histogram(bins=5)\n```\n:::\n\n\n:::\n\n### Customizing a plot\n\n-   You can change how a plot looks by adding the \"color\" and \"fill\" attributes to your `geom_object()`. `color` indicates the outline color and `fill` specifies the background color. Notice that we put the color name inside quotation marks. This is because the colors are character strings (i.e. lists of letters).\n\n    ```{webr-r}\n    ggplot(data, mapping=aes(x=heart_rate))+\n      geom_histogram(bins=5, color=\"blue\", fill=\"lightyellow\")\n    ```\n\n-   You can adjust the labels of the plot by chaining on the `labs()` function: `labs(x=\"x label\", y=\"y label\", title=\"title\")` Again, we enclose the labels in quotation marks.\n\n    ```{webr-r}\n    ggplot(data, mapping=aes(x=heart_rate))+\n      geom_histogram(bins=5, color=\"blue\", fill=\"darkmagenta\")+\n      labs(x=\"Heart rate\", y=\"Count\", title=\"Histogram of Heart Rate for Physiology Data\")\n    ```\n\n### Try it out\n\nYour turn to give it a try! Make a histogram of the `RQ` values for our `data`. As an extra challenge, add color and labels to your graph.\n\n::: panel-tabset\n## Code editor\n\n```{webr-r}\n# Your code here\n\n\n```\n\n## Hint\n\nHere's the basic structure. Click the next hint for more detailed structure.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(___________))+\n      geom_histogram(______________)+\n      labs(_____________)\n```\n:::\n\n\n\n## Hint\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(x=______))+\n      geom_histogram(bins=_____, color=\"_____\", fill=\"_______\")+\n      labs(x=\"______\", y=\"_______\", title=\"_______\")\n```\n:::\n\n\n\n## Answer\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, mapping=aes(x=RQ))+\n      geom_histogram(bins=5, color=\"pink\", fill=\"darkorange\")+\n      labs(x=\"Respiratory Quotient\", y=\"Count\", title=\"Histogram of Respiratory Quotient for Physiology Data\")\n```\n:::\n\n\n:::\n\nGreat work!\n\n### Other ggplot resources\n\nThere are LOTS of resources online where you can learn about making plots with ggplot. Here are a few to start with:\n\n-   [ggplot cheatsheet PDF](https://rstudio.github.io/cheatsheets/data-visualization.pdf){target=\"_blank\"}\n\n-   [posit.cloud ggplot cheatsheet website version](https://rstudio.github.io/cheatsheets/html/data-visualization.html){target=\"_blank\"}\n\n-   [Bio110 tutorial cheatsheet - ggplot section](Bio110_cheatsheet.qmd#sec-ggplot){target=\"_blank\"}\n\n\n## Congratulations!\n\nHooray! You have completed lesson four. You have learned the basics of creating a plot using GGPlot. Lesson five will teach you how to make a scatterplot and boxplot.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}